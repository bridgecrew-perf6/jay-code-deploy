<?php
 namespace Mgt\Varnish\Console\Command; use Symfony\Component\Console\Command\Command; use Symfony\Component\Console\Input\InputInterface; use Symfony\Component\Console\Output\OutputInterface; use Symfony\Component\Filesystem\Filesystem; use Symfony\Component\Process\Process; class CacheWarmerCommand extends Command { const USER_AGENT = "\x4d\x67\164\x56\141\162\x6e\151\x73\150\x43\x72\x61\x77\x6c\145\x72"; const CACHE_WARMER_CACHE_KEY = "\115\x67\x74\x43\x61\x63\x68\145\x57\141\x72\x6d\145\x72"; const CACHE_WARMER_CRAWLED_URLS = "\115\x67\164\x43\x61\x63\x68\x65\x57\141\x72\155\x65\162\x43\x72\x61\x77\154\x65\x64\125\x72\154\163"; protected $curlAdapter; protected $logger; protected $directoryList; protected $storeManager; protected $cache; protected $cachePurger; protected $lockFile; protected $isLocked; protected $varnishConfig; protected $urlResource; protected $urlQueueResource; protected $urlQueueCollection; public function __construct(\Magento\Framework\HTTP\Adapter\Curl $curlAdapter, \Psr\Log\LoggerInterface $logger, \Magento\Framework\App\Filesystem\DirectoryList $directoryList, \Magento\Store\Model\StoreManagerInterface $storeManager, \Mgt\Varnish\Model\Cache\Backend\File $cache, \Magento\CacheInvalidate\Model\PurgeCache $cachePurger, \Mgt\Varnish\Model\Cache\Config $varnishConfig, \Mgt\Varnish\Model\ResourceModel\Url $urlResource, \Mgt\Varnish\Model\ResourceModel\UrlQueue $urlQueueResource, \Mgt\Varnish\Model\ResourceModel\UrlQueue\Collection $urlQueueCollection) { goto Ac074; Fa0e3: parent::__construct(); goto e5e84; b4bb1: $this->urlResource = $urlResource; goto Adb7a; E06be: $this->storeManager = $storeManager; goto b6fd9; b6fd9: $this->cache = $cache; goto Ab710; Adb7a: $this->urlQueueResource = $urlQueueResource; goto a799d; d3b82: $this->directoryList = $directoryList; goto E06be; a799d: $this->urlQueueCollection = $urlQueueCollection; goto Fa0e3; A2a1f: $this->logger = $logger; goto d3b82; Ac074: $this->curlAdapter = $curlAdapter; goto A2a1f; Ab710: $this->cachePurger = $cachePurger; goto a83f7; a83f7: $this->varnishConfig = $varnishConfig; goto b4bb1; e5e84: } protected function configure() { goto Dc765; b4390: $this->setDescription("\x4d\x47\x54\40\x56\141\x72\156\x69\x73\x68\40\103\x61\143\150\x65\x20\127\141\x72\x6d\x65\162"); goto af3f8; af3f8: parent::configure(); goto F7efd; Dc765: $this->setName("\155\x67\x74\x2d\x76\x61\162\x6e\x69\x73\150\72\x63\x61\143\150\145\x2d\167\x61\x72\x6d\145\162"); goto b4390; F7efd: } protected function execute(InputInterface $input, OutputInterface $output) { try { goto edaea; f5bbf: if (false === $this->isLocked()) { goto b3dde; } goto A2a2c; f1da8: if (!(true === $isCacheWarmerCpuLimitEnabled)) { goto b033f; } goto ef6ae; B814f: if (count($this->urlQueueCollection)) { goto f98b1; } goto Aff5d; Ec735: $this->urlQueueCollection->addOrder("\160\162\151\x6f\x72\151\x74\x79"); goto d34e9; cb089: Ab341: goto F88e4; Ff1e9: e546f: goto B4d88; e3a53: $this->deleteExpiredUrls(); goto A3950; bc3d5: d3385: goto E17aa; F88e4: D9f2e: goto Eaba5; F049c: $this->crawlUrls($urls, $output); goto Dec98; c3dc1: a497d: goto Ff1e9; Fe53b: $isCacheWarmerCpuLimitEnabled = $this->varnishConfig->isCacheWarmerCpuLimitEnabled(); goto f1da8; fb581: goto Ab341; goto F1805; ae708: $this->urlQueueCollection->setPageSize($numberOfThreads); goto Ec735; E7cea: foreach ($this->urlQueueCollection as $urlQueue) { try { goto c8c97; c8c97: $storeId = $urlQueue->getStoreId(); goto f6b78; d8f1d: $url = sprintf("\45\x73\x2f\x25\163", rtrim($store->getBaseUrl(), "\x2f"), ltrim($urlQueue->getPath(), "\57")); goto B6186; B6186: $urls[$urlQueue->getId()] = $url; goto e86cc; f6b78: $store = $this->storeManager->getStore($storeId); goto d8f1d; e86cc: } catch (\Exception $e) { } Bf7f8: } goto f69b6; A2a2c: $output->writeln("\x43\x61\x63\x68\x65\x20\x57\x61\162\155\x65\x72\40\151\x73\x20\141\x6c\x72\x65\x61\144\171\40\x72\165\x6e\156\x69\156\147"); goto c6e7d; be23c: if (!($totalCpuUtilization > $cacheWarmerCpuLimit)) { goto c4f82; } goto Fcbd8; E17aa: $this->updateTimestamp(); goto Fe53b; a0f71: b3dde: goto f0060; f69b6: Ed858: goto F049c; Fcbd8: $break = true; goto a50d3; c6e7d: goto e546f; goto a0f71; Aff5d: $break = true; goto fb581; E0669: $i = $i + $numberOfThreads; goto Ccedb; D6637: $i = 0; goto bc3d5; Ccedb: $this->urlQueueCollection->clear(); goto ae708; c0b2f: $cacheWarmerCpuLimit = $this->varnishConfig->getCacheWarmerCpuLimit(); goto be23c; a50d3: $output->writeln(sprintf("\103\165\162\162\145\156\164\154\171\40\x74\x68\x65\x20\x43\120\x55\x20\154\151\155\151\164\40\150\141\163\x20\142\x65\x65\x6e\40\162\145\x61\x63\150\145\144\x2c\40\103\x50\x55\72\x20\x22\45\x73\x20\160\145\162\x63\145\x6e\164\42\x2c\x20\x4c\151\155\151\x74\x3a\x20\42\x25\163\40\160\x65\x72\143\x65\x6e\x74\x22", round($totalCpuUtilization), round($cacheWarmerCpuLimit))); goto c6035; c6035: c4f82: goto D4ade; edaea: ini_set("\155\145\x6d\x6f\x72\x79\137\x6c\x69\x6d\x69\x74", "\x32\60\x34\70\x4d"); goto f5bbf; c0559: $loadAverage = sys_getloadavg(); goto f6ab4; f34eb: if (!(false === $break)) { goto D9f2e; } goto cc22e; d34e9: $this->urlQueueCollection->load(); goto B814f; Df0a8: $break = true; goto bce2f; A3950: $break = false; goto D6637; e8593: if ($break == false) { goto d3385; } goto c3dc1; ef6ae: $numberOfProcessingUnits = $this->runCommand("\x6e\x70\162\157\143"); goto c0559; D5ab8: $urls = []; goto E7cea; f0060: $this->lock(); goto e3a53; Dec98: $this->deleteFromQueue($urls); goto cb089; bce2f: eb604: goto e8593; cc22e: $numberOfThreads = $this->varnishConfig->getNumberOfCacheWarmerThreads(); goto E0669; Eaba5: if (!($i == 1000)) { goto eb604; } goto Df0a8; f6ab4: $totalCpuUtilization = $loadAverage[0] * 100 / $numberOfProcessingUnits; goto Edda6; Edda6: $totalCpuUtilization = min($totalCpuUtilization, 100); goto c0b2f; D4ade: b033f: goto f34eb; F1805: f98b1: goto D5ab8; B4d88: } catch (\Exception $e) { goto F3c3a; fcae7: return \Magento\Framework\Console\Cli::RETURN_FAILURE; goto a6ff0; F3c3a: $errorMessage = $e->getMessage(); goto edb4e; edb4e: $output->writeln(sprintf("\x3c\145\x72\162\x6f\x72\x3e\x25\163\74\57\x65\162\162\157\162\x3e", $errorMessage)); goto fcae7; a6ff0: } } protected function updateTimestamp() { goto c36c4; Db311: $this->cache->save($now, self::CACHE_WARMER_CACHE_KEY); goto C67d4; c36c4: $now = new \DateTime("\156\x6f\x77", new \DateTimeZone("\x55\x54\x43")); goto e6ebe; e6ebe: $now = $now->getTimestamp(); goto Db311; C67d4: } public function crawlUrls(array $urls, OutputInterface $output) { try { goto C7999; C7999: $options = array(CURLOPT_USERAGENT => self::USER_AGENT, CURLOPT_SSL_VERIFYPEER => 0); goto C7d5a; C7d5a: $this->curlAdapter->multiRequest($urls, $options); goto B1635; B1635: foreach ($urls as $url) { $output->writeln(sprintf("\74\151\156\146\x6f\x3e\42\45\163\42\40\143\x72\x61\167\154\145\144\74\x2f\x69\156\x66\157\76", $url)); F5c1d: } goto e3ac0; e3ac0: e8c8c: goto a7ff3; a7ff3: } catch (\Exception $e) { $errorMessage = sprintf("\101\x6e\x20\x65\x72\162\157\x72\x20\157\143\143\x75\x72\162\x65\144\x20\144\165\162\151\156\147\x20\x63\162\x61\167\154\151\156\147\x20\x75\x72\154\163\54\x20\x65\162\162\x6f\x72\x20\x6d\145\x73\163\141\x67\x65\72\x20\x25\x73", $e->getMessage()); $this->logger->error($errorMessage); } } protected function deleteExpiredUrls() { try { $this->urlResource->deleteExpiredUrls(); } catch (\Exception $e) { $errorMessage = sprintf("\101\156\x20\145\x72\162\157\x72\x20\x6f\x63\143\165\162\x72\x65\x64\x20\x64\x75\x72\151\x6e\147\40\x64\145\154\145\x74\151\x6e\147\x20\145\170\x70\151\162\x65\x64\40\x75\162\154\x73\x2c\x20\145\162\162\x6f\162\x20\x6d\145\x73\x73\141\147\145\x3a\x20\x25\163", $e->getMessage()); $this->logger->error($errorMessage); } } public function deleteFromQueue(array $urls) { try { $urlIds = array_keys($urls); $this->urlQueueResource->deleteFromQueue($urlIds); } catch (\Exception $e) { $errorMessage = sprintf("\101\x6e\x20\145\x72\x72\157\162\x20\157\143\x63\x75\x72\x72\x65\144\40\x64\165\162\151\x6e\147\40\x64\x65\154\x65\x74\151\x6e\x67\40\165\x72\154\163\54\x20\145\162\162\157\x72\40\x6d\x65\x73\x73\x61\147\145\x3a\40\45\163", $e->getMessage()); $this->logger->error($errorMessage); } } protected function getLockFile() { goto ca7c7; Ecc69: e121b: goto d76b7; e757d: goto Ee189; goto Ecc69; E93a3: $filesystem->mkdir(dirname($lockFile)); goto fdb4d; d28b7: $this->lockFile = fopen($lockFile, "\x78"); goto e757d; A537a: B0222: goto b6604; C8572: $lockFileDirectory = $this->directoryList->getPath("\164\155\x70"); goto Ac9bc; ca7c7: if (!(null === $this->lockFile)) { goto B0222; } goto C8572; Ac9bc: $lockFile = sprintf("\x25\163\57\x6d\147\x74\137\x76\141\162\x6e\151\163\x68\137\143\x61\143\x68\x65\137\x63\x72\x61\x77\154\x65\162\56\x6c\157\143\x6b", $lockFileDirectory); goto bd760; d76b7: $this->lockFile = fopen($lockFile, "\x77"); goto d8dd2; b6604: return $this->lockFile; goto E1daf; bd760: $filesystem = new Filesystem(); goto E93a3; d8dd2: Ee189: goto e5cf6; e5cf6: fwrite($this->lockFile, date("\x72")); goto A537a; fdb4d: if (is_file($lockFile)) { goto e121b; } goto d28b7; E1daf: } protected function lock() { goto E779a; adaba: return $this; goto B4310; f78c4: $lockFile = $this->getLockFile(); goto Be553; E779a: $this->isLocked = true; goto f78c4; Be553: flock($lockFile, LOCK_EX | LOCK_NB); goto adaba; B4310: } protected function unlock() { goto Baa87; Eca0b: return $this; goto ff956; Baa87: $this->isLocked = false; goto F208d; C8bae: flock($lockFile, LOCK_UN); goto Eca0b; F208d: $lockFile = $this->getLockFile(); goto C8bae; ff956: } protected function isLocked() { goto d7546; d7546: if ($this->isLocked !== null) { goto d46bf; } goto db2be; a6266: flock($fp, LOCK_UN); goto A2c98; eeddf: return $this->isLocked; goto f86bb; c84b0: if (!flock($fp, LOCK_EX | LOCK_NB)) { goto f0cd6; } goto a6266; db2be: $fp = $this->getLockFile(); goto c84b0; d4388: f0cd6: goto fcadb; A2c98: return false; goto d4388; fcadb: return true; goto C1c8c; f86bb: bf79a: goto dd5d5; cb3b4: d46bf: goto eeddf; C1c8c: goto bf79a; goto cb3b4; dd5d5: } protected function runCommand($command, $timeout = 30) { goto A2218; e749d: $process->setTimeout($timeout); goto Bd3c2; Bd3c2: $process->run(); goto C3da3; a57ff: return $output; goto cc1e8; Beedc: throw new \RuntimeException($process->getErrorOutput()); goto C38c1; C3da3: if (!(false === $process->isSuccessful())) { goto d7f3c; } goto Beedc; A2218: $process = new Process($command); goto e749d; a75b9: $output = trim($process->getOutput()); goto a57ff; C38c1: d7f3c: goto a75b9; cc1e8: } public function __destruct() { $this->unlock(); } }
