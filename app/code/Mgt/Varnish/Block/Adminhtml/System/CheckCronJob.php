<?php
 namespace Mgt\Varnish\Block\Adminhtml\System; class CheckCronJob extends \Magento\Backend\Block\Template { const CACHE_WARMER_CACHE_KEY = "\x4d\x67\164\103\x61\x63\x68\145\x57\141\x72\155\145\162"; const CRON_WARNING_MESSAGE_MINUTES = 10; protected $cache; protected $varnishConfig; protected $config; protected $directoryList; public function __construct(\Magento\Backend\Block\Template\Context $context, \Magento\Framework\App\Filesystem\DirectoryList $directoryList, \Mgt\Varnish\Model\Cache\Backend\File $cache, \Magento\Framework\App\Config $config, \Mgt\Varnish\Model\Cache\Config $varnishConfig, array $data = []) { goto Ff02f; B7332: $this->cache = $cache; goto E2f2e; E2f2e: $this->config = $config; goto ec3fc; B17cf: $this->directoryList = $directoryList; goto B7332; ec3fc: $this->varnishConfig = $varnishConfig; goto Ef8cf; Ff02f: parent::__construct($context, $data); goto B17cf; Ef8cf: } public function isVarnishEnabled() { $isVarnishEnabled = $this->varnishConfig->isEnabled(); return $isVarnishEnabled; } public function isCacheWarmerEnabled() { $isCacheWarmerEnabled = $this->varnishConfig->isCacheWarmerEnabled(); return $isCacheWarmerEnabled; } public function showCronNotRunningMessage() { goto Eb382; ced29: if (!(true === $isVarnishEnabled && true === $isCacheWarmerEnabled)) { goto C05d8; } goto f2c78; D0347: goto fa0f8; goto B0b25; a7081: C05d8: goto A7cfc; b5ca5: $showCronNotRunningMessage = true; goto cb225; e7ba3: $isCacheWarmerEnabled = $this->isCacheWarmerEnabled(); goto ced29; a6bc5: $showCronNotRunningMessage = true; goto fc447; e8a6e: $isVarnishEnabled = $this->isVarnishEnabled(); goto e7ba3; e3ac7: $totalMinutes = $dateDiff->days * 24 * 60; goto e056d; e62d7: $lastRunning->setTimezone(new \DateTimeZone("\125\124\103")); goto a9092; Fbd2f: if (0 == $lastRunningTimestamp) { goto Dfbc4; } goto bb3fa; Bb11d: if (!($totalMinutes >= self::CRON_WARNING_MESSAGE_MINUTES)) { goto c8515; } goto b5ca5; B50b9: $lastRunning = new \Datetime(); goto e62d7; fc447: fa0f8: goto a7081; Fc334: $dateDiff = $now->diff($lastRunning); goto e3ac7; a9092: $lastRunning->setTimestamp($lastRunningTimestamp); goto Fc334; e056d: $totalMinutes += $dateDiff->h * 60; goto Aaf57; Eb382: $showCronNotRunningMessage = false; goto e8a6e; A7cfc: return $showCronNotRunningMessage; goto e0aaf; f2c78: $lastRunningTimestamp = $this->getLastRunningTimestamp(); goto Fbd2f; Aaf57: $totalMinutes += $dateDiff->i; goto Bb11d; B0b25: Dfbc4: goto a6bc5; cb225: c8515: goto D0347; bb3fa: $now = new \DateTime("\x6e\157\x77", new \DateTimeZone("\125\x54\x43")); goto B50b9; e0aaf: } protected function getLastRunningTimestamp() { $lastRunningTimestamp = (int) $this->cache->load(self::CACHE_WARMER_CACHE_KEY); return $lastRunningTimestamp; } public function getCronJobCommand() { $cronJobCommand = sprintf("\160\x68\160\40\45\x73\57\142\x69\156\x2f\x6d\141\x67\145\156\164\157\40\155\147\x74\55\x76\x61\x72\x6e\x69\163\x68\x3a\143\x61\x63\x68\x65\x2d\167\141\x72\x6d\x65\x72", $this->directoryList->getRoot()); return $cronJobCommand; } }
